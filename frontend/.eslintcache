[{"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/index.js":"1","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/App.js":"2","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Bookings.js":"3","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/About.js":"4","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Auth.js":"5","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Insurance.js":"6","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/context/auth-context.js":"7","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Navigation/MainNavigation.js":"8","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Availability.js":"9","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Modal/Modal.js":"10","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Backdrop/Backdrop.js":"11","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Home.js":"12","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Sections.js":"13","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Box.js":"14","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Footer.js":"15","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Cards.js":"16","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Header.js":"17","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/CardItem.js":"18","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Infos.js":"19","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Button.js":"20","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Availability/AvailabilityList/AvailabilityList.js":"21","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Availability/AvailabilityList/SingleAvailability/SingleAvailability.js":"22","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Bookings/BookingList.js":"23"},{"size":222,"mtime":1607283501631,"results":"24","hashOfConfig":"25"},{"size":2377,"mtime":1607283501612,"results":"26","hashOfConfig":"25"},{"size":2904,"mtime":1607283501636,"results":"27","hashOfConfig":"25"},{"size":761,"mtime":1607283501633,"results":"28","hashOfConfig":"25"},{"size":4549,"mtime":1607283501635,"results":"29","hashOfConfig":"25"},{"size":1388,"mtime":1607283501636,"results":"30","hashOfConfig":"25"},{"size":204,"mtime":1607283501622,"results":"31","hashOfConfig":"25"},{"size":2283,"mtime":1607283501622,"results":"32","hashOfConfig":"25"},{"size":7449,"mtime":1607283501636,"results":"33","hashOfConfig":"25"},{"size":604,"mtime":1607283501622,"results":"34","hashOfConfig":"25"},{"size":139,"mtime":1607283501616,"results":"35","hashOfConfig":"25"},{"size":449,"mtime":1607283501636,"results":"36","hashOfConfig":"25"},{"size":1030,"mtime":1607283501622,"results":"37","hashOfConfig":"25"},{"size":197,"mtime":1607283501617,"results":"38","hashOfConfig":"25"},{"size":1056,"mtime":1607283501620,"results":"39","hashOfConfig":"25"},{"size":1065,"mtime":1607283501619,"results":"40","hashOfConfig":"25"},{"size":559,"mtime":1607283501620,"results":"41","hashOfConfig":"25"},{"size":712,"mtime":1607283501618,"results":"42","hashOfConfig":"25"},{"size":994,"mtime":1607283501621,"results":"43","hashOfConfig":"25"},{"size":707,"mtime":1607283501618,"results":"44","hashOfConfig":"25"},{"size":795,"mtime":1607283501614,"results":"45","hashOfConfig":"25"},{"size":591,"mtime":1607283501615,"results":"46","hashOfConfig":"25"},{"size":728,"mtime":1607283501616,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"esld9h",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/index.js",[],["98","99"],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/App.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Bookings.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/About.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Auth.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Insurance.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/context/auth-context.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Navigation/MainNavigation.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Availability.js",["100","101"],"import React, { Component } from \"react\";\nimport \"./Availability.css\";\n\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport AuthContext from '../context/auth-context';\nimport AvailabilityList from '../components/Availability/AvailabilityList/AvailabilityList';\nimport availabilityList from '../components/Availability/AvailabilityList/AvailabilityList';\n\nclass AvailabilityPage extends Component{\n    state = {\n        creating: false,\n        availabilityLists: [],\n        isLoading: false,\n        selectedAvailability: null\n    };\n\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n  }\n\n  startCreateAvailabilityHandler = () => {\n    this.setState({ creating: true });\n  };\n\n    componentDidMount() {\n        this.fetchAvailability();\n    }\n\n    startCreateAvailabilityHandler = () => {\n        this.setState({creating: true});\n    }\n\n\n\n    modalConfirmHandler = () => {\n        this.setState({creating: false});\n        const title = this.titleElRef.current.value;\n        const price = +this.priceElRef.current.value;\n        const date = this.dateElRef.current.value;\n        const description = this.descriptionElRef.current.value;\n\n        // validate input\n        if (title.trim().length ===0 || price < 0 || date.trim().length===0 || description.trim().length===0) {\n            return;\n        }\n\n\n    const requestBody = {\n      query: `\n              mutation {\n                createAvailability(availabilityInput: {title: \"${title}\", description: \"${description}\", price:${price}, date:\"${date}\"}) {\n                    _id\n                    title\n                    description\n                    price\n                    date\n                }\n              }\n            `\n          };\n        //   console.log(JSON.stringify(requestBody));\n          const token = this.context.token;\n          fetch('http://localhost:8000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + token\n            }\n          })\n            .then(res => {\n              if (res.status !== 200 && res.status !== 201) {\n                throw new Error('Failed!');\n              }\n              return res.json();\n            })\n            .then(resData => {\n              this.fetchAvailability();\n            })\n            .catch(err => {\n              console.log(err);\n            });\n        \n    };\n    modalCancelHandler = () => {\n        this.setState({creating: false});\n    };\n\n    bookEventHandler = bookedSingleAvailabilityId => {\n        const selected = this.state.availabilityLists.find( a => a._id===bookedSingleAvailabilityId);\n        this.state.selectedAvailability = selected;\n        console.log(this.state);\n        const requestBody = {\n            query: `\n              mutation {\n                bookAvailability(availabilityId: \"${selected._id}\", userId:\"${this.context.userId}\") {\n                    _id\n                    createdAt\n                    updatedAt\n                }\n              }\n            `\n          };\n        console.log(JSON.stringify(requestBody));\n          fetch('http://localhost:8000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + this.context.token\n            }\n          })\n            .then(res => {\n              if (res.status !== 200 && res.status !== 201) {\n                throw new Error('Failed!');\n              }\n              return res.json();\n            })\n            .then(resData => {\n              console.log(resData);\n            })\n            .catch(err => {\n              console.log(err);\n            });\n    };\n\n    fetchAvailability() {\n        this.setState({isLoading: true});\n        const requestBody = {\n            query: `\n              query {\n                availability {\n                    _id\n                    title\n                    description\n                    price\n                    date\n                }\n              }\n            `\n          };\n          fetch('http://localhost:8000/graphql', {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n          })\n            .then(res => {\n              if (res.status !== 200 && res.status !== 201) {\n                throw new Error('Failed!');\n              }\n              return res.json();\n            })\n            .then(resData => {\n              const availabilityLists = resData.data.availability;\n            //   console.log(availabilityLists);\n              this.setState({availabilityLists:availabilityLists, isLoading: false});\n            })\n            .catch(err => {\n              console.log(err);\n              this.setState({isLoading: false});\n            });\n        \n    };\n    \n\n\n    \n    render(){\n        // render data display\n        \n        return (\n        <React.Fragment>\n            <h2>Availability</h2>\n            {this.state.creating && <Backdrop />}\n\n            {this.context.isDoctor && (\n                <div className=\"events-control\">\n                <p>Add new time slots for the patients to book.</p>\n                <button className=\"btn\" onClick={this.startCreateAvailabilityHandler}>Create an Availability</button>\n                </div>\n            )}\n            {!this.context.isDoctor && (\n                <p>Select from below to book a new appointment.</p>\n            )}\n            \n\n\n            \n            {this.state.creating && <Modal title=\"Add Availability\" canCancel canConfirm onCancel={this.modalCancelHandler} onConfirm={this.modalConfirmHandler}>\n                \n                <form>\n                \n                    <div className=\"form-control\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" ref={this.titleElRef}></input>\n                    </div>\n                    <div className=\"form-control\">\n                        <label htmlFor=\"title\">Description</label>\n                        <input type=\"text\" id=\"description\" ref={this.descriptionElRef}></input>\n                    </div>\n                    <div className=\"form-control\">\n                        <label htmlFor=\"price\">Price</label>\n                        <input type=\"number\" id=\"title\" ref={this.priceElRef}></input>\n                    </div>\n                    <div className=\"form-control\">\n                        <label htmlFor=\"date\">Date</label>\n                        <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef}></input>\n                    </div>\n                </form>\n            </Modal>}\n\n            {this.state.isLoading ? <p> Loading... </p> : <AvailabilityList \n            availability={this.state.availabilityLists} \n            authUserIsDoctor={this.context.isDoctor}\n            onClickAvailability = {this.bookEventHandler}\n            />}\n            \n        </React.Fragment>\n        );\n    }\n}\n\nexport default AvailabilityPage;\n","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Modal/Modal.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Backdrop/Backdrop.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/pages/Home.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Sections.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Box.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Footer.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Cards.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Header.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/CardItem.js",["102"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CardItem(props) {\n  return (\n    <>\n      <li className='cards__item'>\n        <Link className='cards__item__link' to={props.path}>\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\n            <img\n              className='cards__item__img'\n              alt='Travel Image'\n              src={props.src}\n            />\n          </figure>\n          <div className='cards__item__info'>\n            <h5 className='cards__item__text'>{props.text}</h5>\n            <h5 className='cards__item__detail'>{props.detail}</h5>\n          </div>\n        </Link>\n      </li>\n    </>\n  );\n}\n\nexport default CardItem;","/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Infos.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Button.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Availability/AvailabilityList/AvailabilityList.js",[],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Availability/AvailabilityList/SingleAvailability/SingleAvailability.js",[],["103","104"],"/Users/siyuchen/Desktop/NEU/CS5610/Project/Clinic Connect/frontend/src/components/Bookings/BookingList.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":94,"column":9,"nodeType":"115","endLine":94,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":10,"column":13,"nodeType":"118","endLine":14,"endColumn":15},{"ruleId":"105","replacedBy":"119"},{"ruleId":"107","replacedBy":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'availabilityList' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["121"],["122"],"no-global-assign","no-unsafe-negation"]